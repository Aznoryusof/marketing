RFMdata <- read.csv(file = "./data/RFMData.csv",row.names=1)
kable(head(RFMdata,5),row.names = TRUE)
library("xtable") # processing of regression output
library("knitr") # used for report compilation and table display
library("ggplot2") # very popular plotting library ggplot2
library("ggthemes") # themes for ggplot2
library("caret") # confusion matrix
library("pROC") # confusion matrix
library("xtable") # processing of regression output
library("knitr") # used for report compilation and table display
library("ggplot2") # very popular plotting library ggplot2
library("ggthemes") # themes for ggplot2
library("caret") # confusion matrix
library("pROC") # confusion matrix
RFMdata <- read.csv(file = "./data/RFMData.csv",row.names=1)
kable(head(RFMdata,5),row.names = TRUE)
library("xtable") # processing of regression output
library("knitr") # used for report compilation and table display
library("ggplot2") # very popular plotting library ggplot2
library("ggthemes") # themes for ggplot2
library("caret") # confusion matrix
library("pROC") # confusion matrix
RFMdata <- read.csv(file = "./data/RFMData.csv",row.names=1)
kable(head(RFMdata,5),row.names = TRUE)
model <- lm(data=RFMdata, Purchase ~ Recency) # note, lm() automatically includes intercept
# coef(model)[1] is beta0
# coef(model)[2] is beta1
p <- ggplot(RFMdata, aes(Recency, Purchase)) +
geom_point(alpha=0.3) + # draws points
theme_bw() # changes visual theme of the plot to make the look cleaner
p + geom_abline(intercept = coef(model)[1], # setting intercept of the line based on beta0
slope = coef(model)[2]) + # setting slope of the line based on beta1
# annotating
annotate(label = sprintf("y = %.5f + %.5f x\nRÂ² = %.3f", coef(model)[1],coef(model)[2],  summary(model)$r.squared), geom = "text", x = 75, y = 0.6, size = 4)
model <- glm(Purchase~Recency+Frequency+Monetary, data=RFMdata, family = "binomial")
output <- cbind(coef(summary(model))[, 1:4],exp(coef(model)))
colnames(output) <- c("beta","SE","z val.","Pr(>|z|)",'exp(beta)')
kable(output,caption = "Logistic regression estimates")
# likelihood ratio test
reduced.model <- glm(Purchase ~ 1, data=RFMdata, family = "binomial")
kable(xtable(anova(reduced.model, model, test = "Chisq")),caption = "Likelihood ratio test")
# calculate logit probabilities
RFMdata$Base.Probability <- predict(model, RFMdata, type="response")
kable(head(RFMdata,5),row.names = TRUE)
# purchase vs. no purchase <-> p>0.5 or p<0.5
RFMdata$Predicted.Purchase <- 1*(RFMdata$Base.Probability>=0.5)
kable(head(RFMdata,5),row.names = TRUE)
confusionMatrix(table(RFMdata$Predicted.Purchase,RFMdata$Purchase),positive = "1")
rocobj <- roc(RFMdata$Purchase, RFMdata$Base.Probability)
{plot(rocobj,legacy.axes=TRUE)
text(0.5, 0.8, labels = sprintf("AUC = %.5f",rocobj$auc))}
# calculate new logit probabilities (Monetary+1)
RFMdata_new <- RFMdata
RFMdata_new$Monetary <- RFMdata_new$Monetary + 1
RFMdata$New.Probability <- predict(model, RFMdata_new, type="response")
# mean predicted base probability
mean(RFMdata$Base.Probability)
# mean new predicted probability
mean(RFMdata$New.Probability)
# lift
(mean(RFMdata$New.Probability) - mean(RFMdata$Base.Probability))/mean(RFMdata$Base.Probability)
# remove predicted purchase variable
RFMdata$Predicted.Purchase <- NULL
# data
kable(head(RFMdata,5),row.names = TRUE)
library("xtable") # processing of regression output
library("knitr") # used for report compilation and table display
library("ggplot2") # very popular plotting library ggplot2
library("ggthemes") # themes for ggplot2
suppressMessages(library("mlogit")) # multinomial logit
library("caret")
data <- read.csv(file = "./data/transportation_data.csv")
kable(head(data,8))
transp_dec<-rbind(
colSums(data[seq(1, nrow(data), 4), ])/210,
colSums(data[seq(2, nrow(data), 4), ])/210,
colSums(data[seq(3, nrow(data), 4), ])/210,
colSums(data[seq(4, nrow(data), 4), ])/210)
transp_dec<-transp_dec[,c(2:5)]
colnames(transp_dec) <- c('CHOICE SHARE','AVG. WAITING TTME', 'AVG. COST', 'AVG. TRAVEL TIME')
kable(transp_dec)
Household_Income <- data[seq(1, nrow(data), 4), 6]
summary(Household_Income)
hist(Household_Income)
require('mlogit')
mdata <- mlogit.data(data=data,
choice='MODE', # variable that contains choice
shape='long', # tells mlogit how data is structured (every row is alternative)
varying=3:5, # only select variables that describe the alternatives
alt.levels = c("plane", "train", "bus", "car"), # levels of the alternatives
id.var='TRAVELER') # consumer id
head(mdata,6)
set.seed(999)
model <- mlogit(MODE~TTME+INVC+INVT,data=mdata)
summary(model)
model.null <- mlogit(MODE~1,data=mdata)
lrtest(model,model.null)
kable(head(predict(model,mdata),1))
predicted_alternative <- apply(predict(model,mdata),1,which.max)
selected_alternative <- rep(1:4,210)[data$MODE>0]
confusionMatrix(table(predicted_alternative,selected_alternative))
model1 <- mlogit(MODE~TTME+INVC+INVT|HINC,data=mdata)
summary(model1)
lrtest(model1,model)
predicted_alternative <- apply(predict(model1,mdata),1,which.max)
selected_alternative <- rep(1:4,210)[data$MODE>0]
confusionMatrix(table(predicted_alternative,selected_alternative))
mdata.new <- mdata
mdata.new[seq(2,840,4),"INVT"] <- 0.9*mdata.new[seq(2,840,4),"INVT"]
predicted_alternative_new <- apply(predict(model1,mdata.new),1,which.max)
table(predicted_alternative)/210 # probability under original data
table(predicted_alternative_new)/210 # probability after decrease in train travel time
(table(predicted_alternative_new) - table(predicted_alternative))/table(predicted_alternative)
model2 <- mlogit(MODE~TTME+INVC+INVT+TTME:HINC+INVC:HINC+INVT:HINC|HINC,data=mdata)
summary(model2)
lrtest(model2,model1)
